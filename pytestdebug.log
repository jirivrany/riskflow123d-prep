versions pytest-2.3.4, py-1.4.12, python-2.7.3.final.0
cwd=/home/albert/workspace/risk_flow
args=['--debug']

  finish pytest_cmdline_parse --> <_pytest.config.Config object at 0x26290d0> [hook]
pytest_cmdline_main {'config': <_pytest.config.Config object at 0x26290d0>} [hook]
  pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x23b1b50>, 'plugin': <Session 'risk_flow'>} [hook]
  pytest_configure {'config': <_pytest.config.Config object at 0x26290d0>} [hook]
    configured with mode set to 'rewrite' [assertion]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x23b1b50>, 'plugin': <_pytest.terminal.TerminalReporter instance at 0x28ebf38>} [hook]
  pytest_sessionstart {'session': <Session 'risk_flow'>} [hook]
    pytest_plugin_registered {'manager': <_pytest.core.PluginManager object at 0x23b1b50>, 'plugin': <_pytest.python.FixtureManager instance at 0x28f5440>} [hook]
    pytest_report_header {'startdir': local('/home/albert/workspace/risk_flow'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
      finish pytest_report_header --> [['using: pytest-2.3.4 pylib-1.4.12']] [hook]
  pytest_collection {'session': <Session 'risk_flow'>} [hook]
    perform_collect <Session 'risk_flow'> ['/home/albert/workspace/risk_flow'] [collection]
      pytest_collectstart {'collector': <Session 'risk_flow'>} [hook]
      pytest_make_collect_report {'collector': <Session 'risk_flow'>} [hook]
        processing argument /home/albert/workspace/risk_flow [collection]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/.settings'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/ico'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/.git'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/app'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/genui'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/gui'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/.gitignore'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/.gitignore'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/.project'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/.project'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/.pydevproject'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/.pydevproject'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/flow_test.ini'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/flow_test.ini'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/pytestdebug.log'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/pytestdebug.log'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/rf123d.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/rf123d.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/riskFlow123d.ini'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/riskFlow123d.ini'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/app/parser'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/app/helpers'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/FlowIni.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/FlowIni.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/FlowIni.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/FlowIni.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/basic_problem.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/basic_problem.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/basic_problem.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/basic_problem.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/settings.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/settings.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/settings.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/settings.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/batch.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/batch.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/batch.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/batch.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/constants.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/constants.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/constants.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/constants.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/logger.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/logger.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/logger.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/logger.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/monte_logger.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/monte_logger.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/monte_logger.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/monte_logger.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/output_dir.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/output_dir.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/output_dir.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/output_dir.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/solver_utils.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/solver_utils.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/helpers/solver_utils.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/helpers/solver_utils.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/flow.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/flow.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/flow.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/flow.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/material.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/material.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/material.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/material.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/mesh.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/mesh.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/mesh.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/mesh.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/app/parser/temp.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/app/parser/temp.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/genui/tab'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/form.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/form.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/form.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/form.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/main_window.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/main_window.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/main_window.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/main_window.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/ui_menu.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/ui_menu.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/ui_menu.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/ui_menu.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/ui_tabwidget.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/ui_tabwidget.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/ui_tabwidget.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/ui_tabwidget.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_flow_check.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_flow_check.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_flow_check.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_flow_check.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_material.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_material.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_material.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_material.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_settings.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_settings.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_settings.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_settings.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_tools.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_tools.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_tools.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_mesh_tools.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_montecarlo.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_montecarlo.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_montecarlo.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_montecarlo.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_sensitivity.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_sensitivity.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_sensitivity.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_sensitivity.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_settings.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_settings.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_settings.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/genui/tab/ui_settings.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/gui/tab'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/Communicate.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/Communicate.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/Communicate.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/Communicate.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainMenu.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainMenu.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainMenu.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainMenu.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainStatusBar.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainStatusBar.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainStatusBar.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainStatusBar.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainTabWidget.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainTabWidget.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainTabWidget.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainTabWidget.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainWindow.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainWindow.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MainWindow.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MainWindow.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MyDoubleValidator.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MyDoubleValidator.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/MyDoubleValidator.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/MyDoubleValidator.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/TabWidget.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/TabWidget.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/TabWidget.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/TabWidget.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/toolbar.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/toolbar.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/toolbar.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/toolbar.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/FlowCheck.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/FlowCheck.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/FlowCheck.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/FlowCheck.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Material.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Material.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Material.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Material.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshSettings.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshSettings.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshSettings.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshSettings.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshTools.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshTools.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshTools.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MeshTools.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MonteCarlo.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MonteCarlo.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/MonteCarlo.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/MonteCarlo.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Sensitivity.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Sensitivity.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Sensitivity.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Sensitivity.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Settings.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Settings.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/Settings.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/Settings.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/gui/tab/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/gui/tab/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/exit.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/exit.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/exit8.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/exit8.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/gear.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/gear.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/play.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/play.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/quick.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/quick.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/quick8.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/quick8.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/solve.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/solve.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/ico/solve8.png'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/ico/solve8.png'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__pycache__'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test/__pycache__'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test/parser'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test/gui'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_flow.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_flow.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_material.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_material.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_mesh.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/__pycache__/test_mesh.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/sensitivity.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/sensitivity.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/test_defaults.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/test_defaults.py'), 'parent': <Session 'risk_flow'>} [hook]
            pytest_pycollect_makemodule {'path': local('/home/albert/workspace/risk_flow/test/gui/test_defaults.py'), 'parent': <Session 'risk_flow'>} [hook]
              finish pytest_pycollect_makemodule --> <Module 'test/gui/test_defaults.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/gui/test_defaults.py'>] [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/test_monte_carlo.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/test_monte_carlo.py'), 'parent': <Session 'risk_flow'>} [hook]
            pytest_pycollect_makemodule {'path': local('/home/albert/workspace/risk_flow/test/gui/test_monte_carlo.py'), 'parent': <Session 'risk_flow'>} [hook]
              finish pytest_pycollect_makemodule --> <Module 'test/gui/test_monte_carlo.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/gui/test_monte_carlo.py'>] [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_defaults.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_defaults.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_monte_carlo.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_monte_carlo.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_sensitivity.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/gui/__pycache__/test_sensitivity.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_directory {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__init__.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/__init__.py'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__init__.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/__init__.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/test_flow.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/test_flow.py'), 'parent': <Session 'risk_flow'>} [hook]
            pytest_pycollect_makemodule {'path': local('/home/albert/workspace/risk_flow/test/parser/test_flow.py'), 'parent': <Session 'risk_flow'>} [hook]
              finish pytest_pycollect_makemodule --> <Module 'test/parser/test_flow.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/parser/test_flow.py'>] [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/test_material.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/test_material.py'), 'parent': <Session 'risk_flow'>} [hook]
            pytest_pycollect_makemodule {'path': local('/home/albert/workspace/risk_flow/test/parser/test_material.py'), 'parent': <Session 'risk_flow'>} [hook]
              finish pytest_pycollect_makemodule --> <Module 'test/parser/test_material.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/parser/test_material.py'>] [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/test_mesh.py'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/test_mesh.py'), 'parent': <Session 'risk_flow'>} [hook]
            pytest_pycollect_makemodule {'path': local('/home/albert/workspace/risk_flow/test/parser/test_mesh.py'), 'parent': <Session 'risk_flow'>} [hook]
              finish pytest_pycollect_makemodule --> <Module 'test/parser/test_mesh.py'> [hook]
            finish pytest_collect_file --> [<Module 'test/parser/test_mesh.py'>] [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_flow.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_flow.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_material.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_material.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
          pytest_ignore_collect {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_mesh.cpython-27-PYTEST.pyc'), 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
          pytest_collect_file {'path': local('/home/albert/workspace/risk_flow/test/parser/__pycache__/test_mesh.cpython-27-PYTEST.pyc'), 'parent': <Session 'risk_flow'>} [hook]
        finish pytest_make_collect_report --> <CollectReport '.' lenresult=5 outcome='passed'> [hook]
      pytest_collectreport {'report': <CollectReport '.' lenresult=5 outcome='passed'>} [hook]
    genitems <Module 'test/gui/test_defaults.py'> [collection]
    pytest_collectstart {'collector': <Module 'test/gui/test_defaults.py'>} [hook]
    pytest_make_collect_report {'collector': <Module 'test/gui/test_defaults.py'>} [hook]
      find_module called for: test [assertion]
      find_module called for: test.gui [assertion]
      find_module called for: test.gui.test_defaults [assertion]
      matched test file '/home/albert/workspace/risk_flow/test/gui/test_defaults.py' [assertion]
      found cached rewritten pyc for '/home/albert/workspace/risk_flow/test/gui/test_defaults.py' [assertion]
      find_module called for: test.gui.__builtin__ [assertion]
      find_module called for: test.gui._pytest [assertion]
      find_module called for: test.gui.sys [assertion]
      find_module called for: test.gui.unittest [assertion]
      find_module called for: unittest [assertion]
      find_module called for: unittest.result [assertion]
      find_module called for: unittest.os [assertion]
      find_module called for: unittest.sys [assertion]
      find_module called for: unittest.traceback [assertion]
      find_module called for: unittest.StringIO [assertion]
      find_module called for: StringIO [assertion]
      find_module called for: unittest.util [assertion]
      find_module called for: unittest.collections [assertion]
      find_module called for: unittest.functools [assertion]
      find_module called for: unittest.case [assertion]
      find_module called for: unittest.difflib [assertion]
      find_module called for: difflib [assertion]
      find_module called for: unittest.pprint [assertion]
      find_module called for: pprint [assertion]
      find_module called for: unittest.re [assertion]
      find_module called for: unittest.warnings [assertion]
      find_module called for: unittest.suite [assertion]
      find_module called for: unittest.loader [assertion]
      find_module called for: unittest.types [assertion]
      find_module called for: unittest.fnmatch [assertion]
      find_module called for: unittest.main [assertion]
      find_module called for: unittest.runner [assertion]
      find_module called for: unittest.time [assertion]
      find_module called for: unittest.signals [assertion]
      find_module called for: unittest.signal [assertion]
      find_module called for: unittest.weakref [assertion]
      find_module called for: test.gui.PyQt4 [assertion]
      find_module called for: PyQt4 [assertion]
      find_module called for: PyQt4.QtGui [assertion]
      find_module called for: sip [assertion]
      find_module called for: PyQt4.QtCore [assertion]
      find_module called for: test.gui.gui [assertion]
      find_module called for: gui [assertion]
      find_module called for: gui.MainWindow [assertion]
      find_module called for: gui.PyQt4 [assertion]
      find_module called for: gui.gui [assertion]
      find_module called for: gui.MainTabWidget [assertion]
      find_module called for: gui.genui [assertion]
      find_module called for: genui [assertion]
      find_module called for: genui.ui_tabwidget [assertion]
      find_module called for: genui.PyQt4 [assertion]
      find_module called for: gui.tab [assertion]
      find_module called for: gui.tab.FlowCheck [assertion]
      find_module called for: gui.tab.genui [assertion]
      find_module called for: genui.tab [assertion]
      find_module called for: genui.tab.ui_flow_check [assertion]
      find_module called for: genui.tab.PyQt4 [assertion]
      find_module called for: gui.tab.PyQt4 [assertion]
      find_module called for: gui.tab.os [assertion]
      find_module called for: gui.tab.app [assertion]
      find_module called for: app [assertion]
      find_module called for: app.parser [assertion]
      find_module called for: app.parser.flow [assertion]
      find_module called for: app.parser.iniparse [assertion]
      find_module called for: iniparse [assertion]
      find_module called for: iniparse.ini [assertion]
      find_module called for: iniparse.re [assertion]
      find_module called for: iniparse.ConfigParser [assertion]
      find_module called for: ConfigParser [assertion]
      find_module called for: iniparse.config [assertion]
      find_module called for: iniparse.compat [assertion]
      find_module called for: iniparse.utils [assertion]
      find_module called for: app.helpers [assertion]
      find_module called for: app.helpers.constants [assertion]
      find_module called for: gui.tab.Settings [assertion]
      find_module called for: genui.tab.ui_settings [assertion]
      find_module called for: gui.tab.ast [assertion]
      find_module called for: app.settings [assertion]
      find_module called for: app.os [assertion]
      find_module called for: app.iniparse [assertion]
      find_module called for: gui.tab.Material [assertion]
      find_module called for: genui.tab.ui_material [assertion]
      find_module called for: gui.tab.MeshSettings [assertion]
      find_module called for: genui.tab.ui_mesh_settings [assertion]
      find_module called for: gui.tab.sys [assertion]
      find_module called for: gui.tab.MeshTools [assertion]
      find_module called for: genui.tab.ui_mesh_tools [assertion]
      find_module called for: gui.tab.gui [assertion]
      find_module called for: gui.MyDoubleValidator [assertion]
      find_module called for: gui.sys [assertion]
      find_module called for: gui.tab.copy [assertion]
      find_module called for: gui.tab.Sensitivity [assertion]
      find_module called for: genui.tab.ui_sensitivity [assertion]
      find_module called for: app.helpers.batch [assertion]
      find_module called for: app.helpers.os [assertion]
      find_module called for: app.helpers.sys [assertion]
      find_module called for: gui.tab.MonteCarlo [assertion]
      find_module called for: genui.tab.ui_montecarlo [assertion]
      find_module called for: app.helpers.solver_utils [assertion]
      find_module called for: app.helpers.shutil [assertion]
      find_module called for: shutil [assertion]
      find_module called for: pwd [assertion]
      find_module called for: grp [assertion]
      find_module called for: gui.app [assertion]
      find_module called for: app.helpers.monte_logger [assertion]
      find_module called for: gui.MainMenu [assertion]
      find_module called for: genui.ui_menu [assertion]
      find_module called for: gui.MainStatusBar [assertion]
      find_module called for: app.helpers.logger [assertion]
      find_module called for: app.helpers.logging [assertion]
      find_module called for: logging [assertion]
      find_module called for: logging.sys [assertion]
      find_module called for: logging.os [assertion]
      find_module called for: logging.time [assertion]
      find_module called for: logging.cStringIO [assertion]
      find_module called for: logging.traceback [assertion]
      find_module called for: logging.warnings [assertion]
      find_module called for: logging.weakref [assertion]
      find_module called for: logging.codecs [assertion]
      find_module called for: logging.thread [assertion]
      find_module called for: logging.threading [assertion]
      find_module called for: threading [assertion]
      find_module called for: logging.atexit [assertion]
      find_module called for: gui.toolbar [assertion]
      find_module called for: app.FlowIni [assertion]
      find_module called for: app.app [assertion]
      find_module called for: app.helpers.output_dir [assertion]
      find_module called for: app.helpers.genericpath [assertion]
      find_module called for: app.parser.material [assertion]
      find_module called for: app.parser.re [assertion]
      find_module called for: app.parser.sys [assertion]
      find_module called for: app.parser.os [assertion]
      find_module called for: app.parser.mesh [assertion]
      find_module called for: app.basic_problem [assertion]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <module 'gui.MainWindow' from '/home/albert/workspace/risk_flow/gui/MainWindow.pyc'>, 'name': 'MainWindow'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <class 'PyQt4.QtGui.QApplication'>, 'name': 'QApplication'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <module 'sys' (built-in)>, 'name': 'sys'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <class 'test.gui.test_defaults.Test'>, 'name': 'Test'} [hook]
        finish pytest_pycollect_makeitem --> <UnitTestCase 'Test'> [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <module 'unittest' from '/usr/lib64/python2.7/unittest/__init__.pyc'>, 'name': 'unittest'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>, 'name': '@pytest_ar'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_defaults.py'>, 'obj': <module '__builtin__' (built-in)>, 'name': '@py_builtins'} [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/gui/test_defaults.py' lenresult=1 outcome='passed'> [hook]
    genitems <UnitTestCase 'Test'> [collection]
    pytest_collectstart {'collector': <UnitTestCase 'Test'>} [hook]
    pytest_make_collect_report {'collector': <UnitTestCase 'Test'>} [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/gui/test_defaults.py::Test' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction 'test_defaults'> [collection]
    pytest_itemcollected {'item': <TestCaseFunction 'test_defaults'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/gui/test_defaults.py::Test' lenresult=1 outcome='passed'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/gui/test_defaults.py' lenresult=1 outcome='passed'>} [hook]
    genitems <Module 'test/gui/test_monte_carlo.py'> [collection]
    pytest_collectstart {'collector': <Module 'test/gui/test_monte_carlo.py'>} [hook]
    pytest_make_collect_report {'collector': <Module 'test/gui/test_monte_carlo.py'>} [hook]
      find_module called for: test.gui.test_monte_carlo [assertion]
      matched test file '/home/albert/workspace/risk_flow/test/gui/test_monte_carlo.py' [assertion]
      found cached rewritten pyc for '/home/albert/workspace/risk_flow/test/gui/test_monte_carlo.py' [assertion]
      find_module called for: PyQt4.QtTest [assertion]
      find_module called for: test.gui.os [assertion]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': '/home/albert/riskflow_test_data/test_dir_create/flow_t.ini', 'name': 'MOCK_INI'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <function test_batch_created at 0x28f09b0>, 'name': 'test_batch_created'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44cf638>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_batch_created'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <class 'PyQt4.QtCore.Qt'>, 'name': 'Qt'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <gui.MainWindow.MainWindow object at 0x2d4b170>, 'name': 'FORM'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <module 'os' from '/usr/lib64/python2.7/os.pyc'>, 'name': 'os'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <module 'gui.MainWindow' from '/home/albert/workspace/risk_flow/gui/MainWindow.pyc'>, 'name': 'MainWindow'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <class 'PyQt4.QtGui.QApplication'>, 'name': 'QApplication'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <module 'sys' (built-in)>, 'name': 'sys'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <class 'PyQt4.QtTest.QTest'>, 'name': 'QTest'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <PyQt4.QtGui.QApplication object at 0x2d01cb0>, 'name': 'APP'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>, 'name': '@pytest_ar'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <module '__builtin__' (built-in)>, 'name': '@py_builtins'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/gui/test_monte_carlo.py'>, 'obj': <function test_monte_carlo at 0x28f0aa0>, 'name': 'test_monte_carlo'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d0200>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_monte_carlo'>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/gui/test_monte_carlo.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_monte_carlo'> [collection]
    pytest_itemcollected {'item': <Function 'test_monte_carlo'>} [hook]
    genitems <Function 'test_batch_created'> [collection]
    pytest_itemcollected {'item': <Function 'test_batch_created'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/gui/test_monte_carlo.py' lenresult=2 outcome='passed'>} [hook]
    genitems <Module 'test/parser/test_flow.py'> [collection]
    pytest_collectstart {'collector': <Module 'test/parser/test_flow.py'>} [hook]
    pytest_make_collect_report {'collector': <Module 'test/parser/test_flow.py'>} [hook]
      find_module called for: test.parser [assertion]
      find_module called for: test.parser.test_flow [assertion]
      matched test file '/home/albert/workspace/risk_flow/test/parser/test_flow.py' [assertion]
      found cached rewritten pyc for '/home/albert/workspace/risk_flow/test/parser/test_flow.py' [assertion]
      find_module called for: test.parser.__builtin__ [assertion]
      find_module called for: test.parser._pytest [assertion]
      find_module called for: test.parser.os [assertion]
      find_module called for: test.parser.app [assertion]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <function test_short_check at 0x2d5d6e0>, 'name': 'test_short_check'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d0b48>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_short_check'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <module 'os' from '/usr/lib64/python2.7/os.pyc'>, 'name': 'os'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <module 'app.parser.flow' from '/home/albert/workspace/risk_flow/app/parser/flow.pyc'>, 'name': 'parser'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <function test_flow at 0x2d5d8c0>, 'name': 'test_flow'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d0fc8>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_flow'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': '/', 'name': 'SEPARATOR'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>, 'name': '@pytest_ar'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_flow.py'>, 'obj': <module '__builtin__' (built-in)>, 'name': '@py_builtins'} [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/parser/test_flow.py' lenresult=2 outcome='passed'> [hook]
    genitems <Function 'test_flow'> [collection]
    pytest_itemcollected {'item': <Function 'test_flow'>} [hook]
    genitems <Function 'test_short_check'> [collection]
    pytest_itemcollected {'item': <Function 'test_short_check'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/parser/test_flow.py' lenresult=2 outcome='passed'>} [hook]
    genitems <Module 'test/parser/test_material.py'> [collection]
    pytest_collectstart {'collector': <Module 'test/parser/test_material.py'>} [hook]
    pytest_make_collect_report {'collector': <Module 'test/parser/test_material.py'>} [hook]
      find_module called for: test.parser.test_material [assertion]
      matched test file '/home/albert/workspace/risk_flow/test/parser/test_material.py' [assertion]
      found cached rewritten pyc for '/home/albert/workspace/risk_flow/test/parser/test_material.py' [assertion]
      find_module called for: test.parser.pytest [assertion]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_create_collections at 0x2d5daa0>, 'name': 'test_create_collections'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d1a70>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_create_collections'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0056306766', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, 'name': 'MOCK_MATERIAL'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': '/home/albert/riskflow_test_data/rf2_test/material/mm.mtr', 'name': 'inpt'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': {'reactions': [], 'geometry': [], 'sorptionfraction': ['9500\t0.00'], 'materials': ['9500\t31\t0.0056306766'], 'sorption': ['9500\t0.00'], 'dualporosity': ['9500\t0.05'], 'storativity': ['9500\t0.01']}, 'name': 'MOCK_COLLECTION'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <module 'pytest' from '/usr/lib/python2.7/site-packages/pytest.pyc'>, 'name': 'pytest'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': {'9617': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.1816229383', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9207': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '50.8641657965', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '4300': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1629.9762434558', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9612': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0303022791', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9200': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '27.4281262472', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '9107': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '313.3291164585', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9100': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '15.5563586833', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '4100': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1165', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9400': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0317923217', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '4200': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1032.2848638149', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9307': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.7199390468', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9300': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.7099416284', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '2200': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '46719', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '2207': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '4622.0588480082', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9517': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.1816229383', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9312': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '12.5646001917', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '1112': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1.6168635762', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9407': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.2268987499', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '1117': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1.4280890288', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9512': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.3341367204', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9600': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0034389798', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '9607': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0076909027', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9500': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0056306766', 'sorption': '0.00', 'dualporosity': '0.05', 'type': '31', 'storativity': '0.01'}, '9112': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '504.0432049864', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9317': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '30.5983106436', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9507': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.0549724979', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9117': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '4230.2302629737', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '4500': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '58.9870734393', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9212': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '48.9489833389', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '9217': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '2468.5935245497', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '4600': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '10.2239966894', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '2212': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1985.6373169262', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '2217': {'reactions': None, 'geometry_type': '21', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '19956', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '4400': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '689.5943494162', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '1107': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '21.2263785132', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9412': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '0.5715650028', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}, '1100': {'reactions': None, 'geometry_type': '2', 'geometry_spec': '0.10', 'sorptionfraction': '0.00', 'type_spec': '1.56', 'sorption': '0.00', 'dualporosity': '0.50', 'type': '21', 'storativity': '0.01'}, '9417': {'reactions': None, 'geometry_type': None, 'geometry_spec': None, 'sorptionfraction': '0.00', 'type_spec': '17.7559828487', 'sorption': '0.00', 'dualporosity': '0.01', 'type': '31', 'storativity': '0.01'}}, 'name': 'TEST_MAT'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': '9500', 'name': 'MOCK_KEY'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': ['9617', '9207', '4300', '9612', '9200', '9107', '9100', '4100', '9400', '4200', '9307', '9300', '2200', '2207', '9517', '9312', '1112', '9407', '1117', '9512', '9600', '9607', '9500', '9112', '9317', '9507', '9117', '4500', '9212', '9217', '4600', '2212', '2217', '4400', '1107', '9412', '1100', '9417'], 'name': 'TEST_KEYS'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <module 'app.parser.material' from '/home/albert/workspace/risk_flow/app/parser/material.pyc'>, 'name': 'material'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_write_changes at 0x2d5db18>, 'name': 'test_write_changes'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d70e0>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_write_changes'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>, 'name': '@pytest_ar'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <module '__builtin__' (built-in)>, 'name': '@py_builtins'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_bad_load at 0x2d5da28>, 'name': 'test_bad_load'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d1f38>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_bad_load'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_set_hydraulic_cond at 0x2d5dc08>, 'name': 'test_set_hydraulic_cond'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d1e60>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_set_hydraulic_cond'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_secific_values at 0x2d5d5f0>, 'name': 'test_secific_values'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d1e60>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_secific_values'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_file_load at 0x2d5d938>, 'name': 'test_file_load'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d15a8>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_file_load'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_material.py'>, 'obj': <function test_multiply_property at 0x2d5db90>, 'name': 'test_multiply_property'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x44d15a8>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_multiply_property'>] [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/parser/test_material.py' lenresult=7 outcome='passed'> [hook]
    genitems <Function 'test_file_load'> [collection]
    pytest_itemcollected {'item': <Function 'test_file_load'>} [hook]
    genitems <Function 'test_secific_values'> [collection]
    pytest_itemcollected {'item': <Function 'test_secific_values'>} [hook]
    genitems <Function 'test_bad_load'> [collection]
    pytest_itemcollected {'item': <Function 'test_bad_load'>} [hook]
    genitems <Function 'test_create_collections'> [collection]
    pytest_itemcollected {'item': <Function 'test_create_collections'>} [hook]
    genitems <Function 'test_write_changes'> [collection]
    pytest_itemcollected {'item': <Function 'test_write_changes'>} [hook]
    genitems <Function 'test_multiply_property'> [collection]
    pytest_itemcollected {'item': <Function 'test_multiply_property'>} [hook]
    genitems <Function 'test_set_hydraulic_cond'> [collection]
    pytest_itemcollected {'item': <Function 'test_set_hydraulic_cond'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/parser/test_material.py' lenresult=7 outcome='passed'>} [hook]
    genitems <Module 'test/parser/test_mesh.py'> [collection]
    pytest_collectstart {'collector': <Module 'test/parser/test_mesh.py'>} [hook]
    pytest_make_collect_report {'collector': <Module 'test/parser/test_mesh.py'>} [hook]
      find_module called for: test.parser.test_mesh [assertion]
      matched test file '/home/albert/workspace/risk_flow/test/parser/test_mesh.py' [assertion]
      found cached rewritten pyc for '/home/albert/workspace/risk_flow/test/parser/test_mesh.py' [assertion]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <function test_number_of_elements at 0x2d5dde8>, 'name': 'test_number_of_elements'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x45a1f38>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_number_of_elements'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': '/home/albert/riskflow_test_data/test1.msh', 'name': 'inpt'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <app.parser.mesh.Mesh object at 0x2d74110>, 'name': 'TEST_MESH'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <module 'app.parser.mesh' from '/home/albert/workspace/risk_flow/app/parser/mesh.pyc'>, 'name': 'mesh'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <function test_second_element at 0x2d5de60>, 'name': 'test_second_element'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x45a36c8>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_second_element'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <function test_number_of_nodes at 0x2d5dd70>, 'name': 'test_number_of_nodes'} [hook]
        pytest_generate_tests {'metafunc': <_pytest.python.Metafunc instance at 0x45a3998>} [hook]
        finish pytest_pycollect_makeitem --> [<Function 'test_number_of_nodes'>] [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <module '_pytest.assertion.rewrite' from '/usr/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>, 'name': '@pytest_ar'} [hook]
      pytest_pycollect_makeitem {'collector': <Module 'test/parser/test_mesh.py'>, 'obj': <module '__builtin__' (built-in)>, 'name': '@py_builtins'} [hook]
      finish pytest_make_collect_report --> <CollectReport 'test/parser/test_mesh.py' lenresult=3 outcome='passed'> [hook]
    genitems <Function 'test_number_of_nodes'> [collection]
    pytest_itemcollected {'item': <Function 'test_number_of_nodes'>} [hook]
    genitems <Function 'test_number_of_elements'> [collection]
    pytest_itemcollected {'item': <Function 'test_number_of_elements'>} [hook]
    genitems <Function 'test_second_element'> [collection]
    pytest_itemcollected {'item': <Function 'test_second_element'>} [hook]
    pytest_collectreport {'report': <CollectReport 'test/parser/test_mesh.py' lenresult=3 outcome='passed'>} [hook]
    pytest_collection_modifyitems {'items': [<TestCaseFunction 'test_defaults'>, <Function 'test_monte_carlo'>, <Function 'test_batch_created'>, <Function 'test_flow'>, <Function 'test_short_check'>, <Function 'test_file_load'>, <Function 'test_secific_values'>, <Function 'test_bad_load'>, <Function 'test_create_collections'>, <Function 'test_write_changes'>, <Function 'test_multiply_property'>, <Function 'test_set_hydraulic_cond'>, <Function 'test_number_of_nodes'>, <Function 'test_number_of_elements'>, <Function 'test_second_element'>], 'session': <Session 'risk_flow'>, 'config': <_pytest.config.Config object at 0x26290d0>} [hook]
    pytest_collection_finish {'session': <Session 'risk_flow'>} [hook]
    finish pytest_collection --> [<TestCaseFunction 'test_defaults'>, <Function 'test_monte_carlo'>, <Function 'test_batch_created'>, <Function 'test_flow'>, <Function 'test_short_check'>, <Function 'test_file_load'>, <Function 'test_secific_values'>, <Function 'test_bad_load'>, <Function 'test_create_collections'>, <Function 'test_write_changes'>, <Function 'test_multiply_property'>, <Function 'test_set_hydraulic_cond'>, <Function 'test_number_of_nodes'>, <Function 'test_number_of_elements'>, <Function 'test_second_element'>] [hook]
  pytest_runtestloop {'session': <Session 'risk_flow'>} [hook]
    pytest_runtest_protocol {'item': <TestCaseFunction 'test_defaults'>, 'nextitem': <Function 'test_monte_carlo'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/gui/test_defaults.py::Test::test_defaults', 'location': ('test/gui/test_defaults.py', 18, 'Test.test_defaults')} [hook]
      pytest_runtest_setup {'item': <TestCaseFunction 'test_defaults'>} [hook]
      pytest_runtest_makereport {'item': <TestCaseFunction 'test_defaults'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <TestCaseFunction 'test_defaults'>} [hook]
      pytest_runtest_makereport {'item': <TestCaseFunction 'test_defaults'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <TestCaseFunction 'test_defaults'>, 'nextitem': <Function 'test_monte_carlo'>} [hook]
      pytest_runtest_makereport {'item': <TestCaseFunction 'test_defaults'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_defaults.py::Test::test_defaults' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_monte_carlo'>, 'nextitem': <Function 'test_batch_created'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/gui/test_monte_carlo.py::test_monte_carlo', 'location': ('test/gui/test_monte_carlo.py', 23, 'test_monte_carlo')} [hook]
      pytest_runtest_setup {'item': <Function 'test_monte_carlo'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_monte_carlo'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_monte_carlo'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_monte_carlo'>} [hook]
          find_module called for: gui.tab.numpy [assertion]
          find_module called for: numpy [assertion]
          find_module called for: numpy.numpy [assertion]
          find_module called for: numpy.__config__ [assertion]
          find_module called for: numpy.version [assertion]
          find_module called for: numpy._import_tools [assertion]
          find_module called for: numpy.os [assertion]
          find_module called for: numpy.sys [assertion]
          find_module called for: numpy.add_newdocs [assertion]
          find_module called for: numpy.lib [assertion]
          find_module called for: numpy.lib.info [assertion]
          find_module called for: numpy.lib.numpy [assertion]
          find_module called for: numpy.lib.type_check [assertion]
          find_module called for: numpy.core [assertion]
          find_module called for: numpy.core.info [assertion]
          find_module called for: numpy.core.numpy [assertion]
          find_module called for: numpy.core.multiarray [assertion]
          find_module called for: numpy.core.umath [assertion]
          find_module called for: numpy.core._internal [assertion]
          find_module called for: numpy.core.re [assertion]
          find_module called for: numpy.core.sys [assertion]
          find_module called for: numpy.core.warnings [assertion]
          find_module called for: numpy.compat [assertion]
          find_module called for: numpy.compat._inspect [assertion]
          find_module called for: numpy.compat.types [assertion]
          find_module called for: numpy.compat.py3k [assertion]
          find_module called for: numpy.compat.sys [assertion]
          find_module called for: numpy.core.numerictypes [assertion]
          find_module called for: numpy.core.types [assertion]
          find_module called for: numpy.core.__builtin__ [assertion]
          find_module called for: numpy.core._sort [assertion]
          find_module called for: numpy.core.numeric [assertion]
          find_module called for: numpy.core._dotblas [assertion]
          find_module called for: numpy.core.arrayprint [assertion]
          find_module called for: numpy.core.fromnumeric [assertion]
          find_module called for: numpy.core.cPickle [assertion]
          find_module called for: cPickle [assertion]
          find_module called for: numpy.core.defchararray [assertion]
          find_module called for: numpy.core.records [assertion]
          find_module called for: numpy.core.os [assertion]
          find_module called for: numpy.core.memmap [assertion]
          find_module called for: numpy.core.scalarmath [assertion]
          find_module called for: numpy.core.function_base [assertion]
          find_module called for: numpy.core.machar [assertion]
          find_module called for: numpy.core.getlimits [assertion]
          find_module called for: numpy.core.shape_base [assertion]
          find_module called for: numpy.testing [assertion]
          find_module called for: numpy.testing.unittest [assertion]
          find_module called for: numpy.testing.decorators [assertion]
          find_module called for: numpy.testing.warnings [assertion]
          find_module called for: numpy.testing.sys [assertion]
          find_module called for: numpy.testing.numpy [assertion]
          find_module called for: numpy.testing.utils [assertion]
          find_module called for: numpy.testing.os [assertion]
          find_module called for: numpy.testing.re [assertion]
          find_module called for: numpy.testing.operator [assertion]
          find_module called for: numpy.testing.types [assertion]
          find_module called for: numpy.testing.nosetester [assertion]
          find_module called for: numpy.testing.numpytest [assertion]
          find_module called for: numpy.testing.traceback [assertion]
          find_module called for: numpy.lib.ufunclike [assertion]
          find_module called for: numpy.lib.index_tricks [assertion]
          find_module called for: numpy.lib.sys [assertion]
          find_module called for: numpy.lib.math [assertion]
          find_module called for: numpy.lib.function_base [assertion]
          find_module called for: numpy.lib.warnings [assertion]
          find_module called for: numpy.lib.types [assertion]
          find_module called for: numpy.lib.twodim_base [assertion]
          find_module called for: numpy.lib._compiled_base [assertion]
          find_module called for: numpy.lib.arraysetops [assertion]
          find_module called for: numpy.lib.utils [assertion]
          find_module called for: numpy.lib.os [assertion]
          find_module called for: numpy.lib.re [assertion]
          find_module called for: numpy.matrixlib [assertion]
          find_module called for: numpy.matrixlib.defmatrix [assertion]
          find_module called for: numpy.matrixlib.sys [assertion]
          find_module called for: numpy.matrixlib.numpy [assertion]
          find_module called for: numpy.lib.shape_base [assertion]
          find_module called for: numpy.lib.stride_tricks [assertion]
          find_module called for: numpy.lib.scimath [assertion]
          find_module called for: numpy.lib.polynomial [assertion]
          find_module called for: numpy.linalg [assertion]
          find_module called for: numpy.linalg.info [assertion]
          find_module called for: numpy.linalg.linalg [assertion]
          find_module called for: numpy.linalg.numpy [assertion]
          find_module called for: numpy.linalg.lapack_lite [assertion]
          find_module called for: numpy.lib.npyio [assertion]
          find_module called for: numpy.lib.format [assertion]
          find_module called for: numpy.lib.cPickle [assertion]
          find_module called for: numpy.lib.itertools [assertion]
          find_module called for: numpy.lib.weakref [assertion]
          find_module called for: numpy.lib.operator [assertion]
          find_module called for: numpy.lib._datasource [assertion]
          find_module called for: numpy.lib.shutil [assertion]
          find_module called for: numpy.lib._iotools [assertion]
          find_module called for: numpy.lib.__builtin__ [assertion]
          find_module called for: numpy.lib.cStringIO [assertion]
          find_module called for: numpy.lib.financial [assertion]
          find_module called for: numpy.lib.arrayterator [assertion]
          find_module called for: numpy.lib.__future__ [assertion]
          find_module called for: numpy.fft [assertion]
          find_module called for: numpy.fft.info [assertion]
          find_module called for: numpy.fft.fftpack [assertion]
          find_module called for: numpy.fft.numpy [assertion]
          find_module called for: numpy.fft.fftpack_lite [assertion]
          find_module called for: numpy.fft.helper [assertion]
          find_module called for: numpy.fft.types [assertion]
          find_module called for: numpy.polynomial [assertion]
          find_module called for: numpy.polynomial.warnings [assertion]
          find_module called for: numpy.polynomial.polynomial [assertion]
          find_module called for: numpy.polynomial.__future__ [assertion]
          find_module called for: numpy.polynomial.numpy [assertion]
          find_module called for: numpy.polynomial.polyutils [assertion]
          find_module called for: numpy.polynomial.sys [assertion]
          find_module called for: numpy.polynomial.polytemplate [assertion]
          find_module called for: numpy.polynomial.string [assertion]
          find_module called for: numpy.polynomial.chebyshev [assertion]
          find_module called for: numpy.polynomial.legendre [assertion]
          find_module called for: numpy.polynomial.hermite [assertion]
          find_module called for: numpy.polynomial.hermite_e [assertion]
          find_module called for: numpy.polynomial.laguerre [assertion]
          find_module called for: numpy.random [assertion]
          find_module called for: numpy.random.info [assertion]
          find_module called for: numpy.random.mtrand [assertion]
          find_module called for: numpy.random.numpy [assertion]
          find_module called for: numpy.ctypeslib [assertion]
          find_module called for: numpy.ctypes [assertion]
          find_module called for: ctypes [assertion]
          find_module called for: ctypes.os [assertion]
          find_module called for: ctypes.sys [assertion]
          find_module called for: ctypes._ctypes [assertion]
          find_module called for: _ctypes [assertion]
          find_module called for: ctypes.struct [assertion]
          find_module called for: ctypes.ctypes [assertion]
          find_module called for: ctypes._endian [assertion]
          find_module called for: numpy.core.ctypes [assertion]
          find_module called for: numpy.ma [assertion]
          find_module called for: numpy.ma.core [assertion]
          find_module called for: numpy.ma.cPickle [assertion]
          find_module called for: numpy.ma.numpy [assertion]
          find_module called for: numpy.ma.warnings [assertion]
          find_module called for: numpy.ma.sys [assertion]
          find_module called for: numpy.ma.extras [assertion]
          find_module called for: numpy.ma.itertools [assertion]
          find_module called for: numpy.__builtin__ [assertion]
      pytest_runtest_makereport {'item': <Function 'test_monte_carlo'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_monte_carlo'>, 'nextitem': <Function 'test_batch_created'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_monte_carlo'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_monte_carlo' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_batch_created'>, 'nextitem': <Function 'test_flow'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/gui/test_monte_carlo.py::test_batch_created', 'location': ('test/gui/test_monte_carlo.py', 52, 'test_batch_created')} [hook]
      pytest_runtest_setup {'item': <Function 'test_batch_created'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_batch_created'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_batch_created'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_batch_created'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_batch_created'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_batch_created'>, 'nextitem': <Function 'test_flow'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_batch_created'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/gui/test_monte_carlo.py::test_batch_created' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_flow'>, 'nextitem': <Function 'test_short_check'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_flow.py::test_flow', 'location': ('test/parser/test_flow.py', 11, 'test_flow')} [hook]
      pytest_runtest_setup {'item': <Function 'test_flow'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_flow'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_flow' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_flow'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_flow'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_flow'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_flow' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_flow'>, 'nextitem': <Function 'test_short_check'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_flow'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_flow' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_flow' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_short_check'>, 'nextitem': <Function 'test_file_load'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_flow.py::test_short_check', 'location': ('test/parser/test_flow.py', 31, 'test_short_check')} [hook]
      pytest_runtest_setup {'item': <Function 'test_short_check'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_short_check'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_short_check' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_short_check'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_short_check'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_short_check'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_short_check' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_short_check'>, 'nextitem': <Function 'test_file_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_short_check'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_flow.py::test_short_check' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_flow.py::test_short_check' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_file_load'>, 'nextitem': <Function 'test_secific_values'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_file_load', 'location': ('test/parser/test_material.py', 38, 'test_file_load')} [hook]
      pytest_runtest_setup {'item': <Function 'test_file_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_file_load'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_file_load' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_file_load'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_file_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_file_load'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_file_load' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_file_load'>, 'nextitem': <Function 'test_secific_values'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_file_load'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_file_load' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_file_load' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_secific_values'>, 'nextitem': <Function 'test_bad_load'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_secific_values', 'location': ('test/parser/test_material.py', 42, 'test_secific_values')} [hook]
      pytest_runtest_setup {'item': <Function 'test_secific_values'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_secific_values'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_secific_values' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_secific_values'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_secific_values'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_secific_values'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_secific_values' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_secific_values'>, 'nextitem': <Function 'test_bad_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_secific_values'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_secific_values' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_secific_values' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_bad_load'>, 'nextitem': <Function 'test_create_collections'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_bad_load', 'location': ('test/parser/test_material.py', 46, 'test_bad_load')} [hook]
      pytest_runtest_setup {'item': <Function 'test_bad_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_bad_load'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_bad_load' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_bad_load'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_bad_load'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_bad_load'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_bad_load' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_bad_load'>, 'nextitem': <Function 'test_create_collections'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_bad_load'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_bad_load' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_bad_load' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_create_collections'>, 'nextitem': <Function 'test_write_changes'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_create_collections', 'location': ('test/parser/test_material.py', 53, 'test_create_collections')} [hook]
      pytest_runtest_setup {'item': <Function 'test_create_collections'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_create_collections'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_create_collections' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_create_collections'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_create_collections'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_create_collections'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_create_collections' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_create_collections'>, 'nextitem': <Function 'test_write_changes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_create_collections'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_create_collections' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_create_collections' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_write_changes'>, 'nextitem': <Function 'test_multiply_property'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_write_changes', 'location': ('test/parser/test_material.py', 59, 'test_write_changes')} [hook]
      pytest_runtest_setup {'item': <Function 'test_write_changes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_write_changes'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_write_changes' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_write_changes'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_write_changes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_write_changes'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_write_changes' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_write_changes'>, 'nextitem': <Function 'test_multiply_property'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_write_changes'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_write_changes' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_write_changes' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_multiply_property'>, 'nextitem': <Function 'test_set_hydraulic_cond'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_multiply_property', 'location': ('test/parser/test_material.py', 70, 'test_multiply_property')} [hook]
      pytest_runtest_setup {'item': <Function 'test_multiply_property'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_multiply_property'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_multiply_property' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_multiply_property'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_multiply_property'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_multiply_property'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_multiply_property' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_multiply_property'>, 'nextitem': <Function 'test_set_hydraulic_cond'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_multiply_property'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_multiply_property' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_multiply_property' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_set_hydraulic_cond'>, 'nextitem': <Function 'test_number_of_nodes'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_material.py::test_set_hydraulic_cond', 'location': ('test/parser/test_material.py', 82, 'test_set_hydraulic_cond')} [hook]
      pytest_runtest_setup {'item': <Function 'test_set_hydraulic_cond'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_set_hydraulic_cond'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_set_hydraulic_cond'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_set_hydraulic_cond'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_set_hydraulic_cond'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_set_hydraulic_cond'>, 'nextitem': <Function 'test_number_of_nodes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_set_hydraulic_cond'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_material.py::test_set_hydraulic_cond' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_number_of_nodes'>, 'nextitem': <Function 'test_number_of_elements'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_mesh.py::test_number_of_nodes', 'location': ('test/parser/test_mesh.py', 16, 'test_number_of_nodes')} [hook]
      pytest_runtest_setup {'item': <Function 'test_number_of_nodes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_nodes'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_number_of_nodes'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_number_of_nodes'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_nodes'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_number_of_nodes'>, 'nextitem': <Function 'test_number_of_elements'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_nodes'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_nodes' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_number_of_elements'>, 'nextitem': <Function 'test_second_element'>} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_mesh.py::test_number_of_elements', 'location': ('test/parser/test_mesh.py', 20, 'test_number_of_elements')} [hook]
      pytest_runtest_setup {'item': <Function 'test_number_of_elements'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_elements'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_number_of_elements'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_number_of_elements'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_elements'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_number_of_elements'>, 'nextitem': <Function 'test_second_element'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_number_of_elements'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_number_of_elements' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    pytest_runtest_protocol {'item': <Function 'test_second_element'>, 'nextitem': None} [hook]
      pytest_runtest_logstart {'nodeid': 'test/parser/test_mesh.py::test_second_element', 'location': ('test/parser/test_mesh.py', 24, 'test_second_element')} [hook]
      pytest_runtest_setup {'item': <Function 'test_second_element'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_second_element'>, 'call': <CallInfo when='setup' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_second_element' when='setup' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='setup' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='setup' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      pytest_runtest_call {'item': <Function 'test_second_element'>} [hook]
        pytest_pyfunc_call {'pyfuncitem': <Function 'test_second_element'>} [hook]
      pytest_runtest_makereport {'item': <Function 'test_second_element'>, 'call': <CallInfo when='call' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_second_element' when='call' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='call' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='call' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
      pytest_runtest_teardown {'item': <Function 'test_second_element'>, 'nextitem': None} [hook]
      pytest_runtest_makereport {'item': <Function 'test_second_element'>, 'call': <CallInfo when='teardown' result: []>} [hook]
        finish pytest_runtest_makereport --> <TestReport 'test/parser/test_mesh.py::test_second_element' when='teardown' outcome='passed'> [hook]
      pytest_runtest_logreport {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='teardown' outcome='passed'>} [hook]
        pytest_report_teststatus {'report': <TestReport 'test/parser/test_mesh.py::test_second_element' when='teardown' outcome='passed'>} [hook]
          finish pytest_report_teststatus --> ('', '', '') [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
  pytest_sessionfinish {'session': <Session 'risk_flow'>, 'exitstatus': 0} [hook]
    pytest_terminal_summary {'terminalreporter': <_pytest.terminal.TerminalReporter instance at 0x28ebf38>} [hook]
  pytest_unconfigure {'config': <_pytest.config.Config object at 0x26290d0>} [hook]
    finish [config:tmpdir]
